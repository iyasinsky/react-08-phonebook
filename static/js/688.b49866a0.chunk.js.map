{"version":3,"file":"static/js/688.b49866a0.chunk.js","mappings":"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","sources":["components/ContactForm/index.styled.js","helpers/formValidation.js","components/ContactForm/index.jsx","components/ContactList/index.styled.js","components/ContactList/index.jsx","components/Filter/index.styled.js","components/Filter/index.jsx","components/Contacts/index.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const FormikForm = styled(Form)`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 20px;\n\n  div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  input {\n    width: 250px;\n    padding: 5px 10px;\n  }\n\n  p {\n    color: red;\n    text-align: end;\n  }\n\n  button {\n    padding: 5px 10px;\n  }\n`;\n","import * as Yup from 'yup';\nimport 'yup-phone-lite';\n\nexport const formValidationScheme = Yup.object().shape({\n  name: Yup.string().required(),\n  number: Yup.string().phone('UA').required(),\n});\n","import { useDispatch } from 'react-redux';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport { addContact } from 'redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { FormikForm } from './index.styled';\nimport { formValidationScheme } from 'helpers/formValidation';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const contactHandler = newContact => {\n    const normalizedName = newContact.name.toLowerCase();\n    const isContactExist = contacts.some(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    isContactExist\n      ? alert(`${newContact.name} is already in contacts.`)\n      : dispatch(addContact(newContact));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={formValidationScheme}\n        onSubmit={(values, actions) => {\n          contactHandler(values);\n          actions.resetForm();\n        }}\n      >\n        <FormikForm>\n          <label>\n            <div>\n              <span>Name</span>\n              <Field name=\"name\" placeholder=\"Enter name\" />\n            </div>\n            <ErrorMessage name=\"name\" component=\"p\" />\n          </label>\n          <label>\n            <div>\n              <span>Phone</span>\n              <Field name=\"number\" placeholder=\"Enter UA phone number\" />\n            </div>\n            <ErrorMessage name=\"number\" component=\"p\" />\n          </label>\n          <button type=\"submit\">Add new contact</button>\n        </FormikForm>\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  li {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  li:not(:first-child) {\n    margin-top: 10px;\n  }\n\n  button {\n    padding: 5px 10px;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List } from './index.styled';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <span>{name}:</span>\n            <span>{number}</span>\n            <button onClick={() => dispatch(deleteContact(id))}>Delete</button>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 20px;\n\n  input {\n    width: 100%;\n    margin-top: 5px;\n    padding: 5px 10px;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selector';\nimport { filterValue } from 'redux/filter/slice';\nimport { Label } from './index.styled';\n\nexport const Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <Label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(filterValue(e.target.value))}\n        placeholder=\"Enter a name to search for\"\n      />\n    </Label>\n  );\n};\n","import { useContacts } from 'hooks';\nimport { ContactsList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\n\nexport const Contacts = () => {\n  const contacts = useContacts();\n\n  return (\n    <div>\n      <h2>Contacts</h2>\n      <Filter />\n      {contacts.length ? <ContactsList /> : null}\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { Contacts } from 'components/Contacts';\n\nconst ContactsPage = () => {\n  return (\n    <section>\n      <ContactForm />\n      <Contacts />\n    </section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["FormikForm","styled","Form","_templateObject","_taggedTemplateLiteral","formValidationScheme","Yup","shape","name","required","number","phone","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","normalizedName","toLowerCase","some","contact","alert","concat","addContact","contactHandler","resetForm","Field","placeholder","ErrorMessage","component","type","List","ContactsList","selectVisibleContacts","map","_ref","id","onClick","deleteContact","Label","Filter","value","selectFilter","onChange","e","filterValue","target","Contacts","useContacts","length"],"sourceRoot":""}